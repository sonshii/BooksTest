{"version":3,"sources":["Components/InputBooks/BookCreator.jsx","Components/BookItem/BookItem.jsx","Components/BooksList/BooksList.jsx","const.js","App.jsx","index.js"],"names":["BookCreator","isVisible","onCancel","modalСhoice","initialFormData","useState","image","setImage","progress","setProgress","Form","useForm","form","sizeImage","setSizeImage","fileList","setfileList","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","Image","src","result","naturalWidth","naturalHeight","onerror","error","beforeUploadImage","a","imageBase64","console","log","title","visible","onOk","submit","name","onFinish","data","photo","book","initialValues","Item","label","rules","required","message","accept","beforeUpload","customRequest","success","percent","onChange","info","slice","map","response","url","icon","UploadOutlined","type","afterClose","Title","Typography","Text","BookItem","deleteBook","onEditBook","cover","alt","actions","EditOutlined","onClick","CloseOutlined","id","author","BooksList","books","length","gutter","xs","sm","md","lg","xl","BOOKS_STORE","App","setBooks","isModalVisible","setIsModalVisible","editableBook","setEditableBook","saveBookInLocalStorage","currentBooks","localStorage","setItem","JSON","stringify","saveBooks","useEffect","getItem","parse","className","span","offset","bookID","newBooksList","filter","updatedBooks","b","updateBooks","newBook","Date","getTime","addBook","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a9a4df5.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nimport {Button, Input, Modal, Form, Upload, Alert} from 'antd'\r\nimport {\r\n  UploadOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst BookCreator = ({ isVisible, onCancel, modalСhoice, initialFormData }) => {\r\n  const [image, setImage] = useState();\r\n  const [progress, setProgress] = useState(0);\r\n  const [form] = Form.useForm();\r\n  const [sizeImage, setSizeImage] = useState(null)\r\n  const [fileList, setfileList] = useState();\r\n  \r\n  /** Отправляет форму */\r\n  const handleOk = () => {\r\n    form.submit();\r\n  };\r\n\r\n  /** Сохранение книги при отправке формы */\r\n  const onFinish = (data) => {\r\n    if (sizeImage || sizeImage === null){\r\n      const photo = image ? image : initialFormData.photo;\r\n      const book = {...initialFormData, ...data, photo};\r\n      modalСhoice(book);\r\n    } else {\r\n      console.log('error')\r\n    }\r\n  };\r\n  \r\n\r\n  const toBase64 = file =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        const image = new Image();\r\n        image.src = reader.result;\r\n        image.onload = () => {\r\n          if ( image.naturalWidth === 145  && image.naturalHeight === 205 ) {\r\n            resolve(reader.result);\r\n            setSizeImage(true)\r\n          } else {\r\n            reject('неверный размер изображения')\r\n            setSizeImage(false)\r\n          }\r\n        }\r\n      };\r\n      reader.onerror = error => reject(error);\r\n  });\r\n  \r\n  \r\n  const beforeUploadImage = async file => {\r\n    try {\r\n      setProgress(0);\r\n      const imageBase64 = await toBase64(file);\r\n      setProgress(100);\r\n      setImage(imageBase64);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  /* Закрытие всплывающего окна, если изображение соответсвует размерам */\r\n  const handleClose = () => {\r\n    setSizeImage(true);\r\n  };\r\n\r\n  /* Загрузка только одного изображения */\r\n  const handleChange = info => {\r\n    let fileList = [...info.fileList];\r\n    fileList = fileList.slice(-1);\r\n    fileList = fileList.map(file => {\r\n      if (file.response) {\r\n        file.url = file.response.url;\r\n      }\r\n      return file;\r\n    });\r\n    setfileList([...fileList]);\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <Modal \r\n        title=\"Добавить книгу\"\r\n        visible={isVisible} \r\n        onOk={handleOk} \r\n        onCancel={onCancel}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          form={form}\r\n          initialValues={initialFormData}\r\n        >\r\n          <Form.Item\r\n            label=\"Название книги\"\r\n            name=\"title\"\r\n            rules={[{ required: true, message: 'Введите название.' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Автор\"\r\n            name=\"author\"\r\n            rules={[{ required: true, message: 'Введите автора.' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Картинка\">\r\n            <Upload\r\n              accept=\"image/png, image/jpeg\"\r\n              beforeUpload={beforeUploadImage}\r\n              customRequest={() => {\r\n                return {};\r\n              }}\r\n              progress={{ success: { percent: progress } }}\r\n              onChange={handleChange}\r\n              fileList={fileList}\r\n            >\r\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n            </Upload>\r\n          </Form.Item>\r\n          {sizeImage === false ? (\r\n              <Alert message=\"Введите картинку размером 145x205px\" type=\"error\" afterClose={handleClose} />\r\n            ) : null}\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookCreator","import React from 'react'\r\n\r\nimport { Card, Image, Typography } from 'antd';\r\nimport {\r\n  CloseOutlined,\r\n  EditOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Title, Text } = Typography;\r\nconst BookItem = ({ book, deleteBook, onEditBook }) =>{\r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={\r\n          <Image\r\n            alt=\"image\"\r\n            src={book.photo}\r\n          />\r\n        }\r\n        actions={[\r\n          <EditOutlined onClick={()=>{onEditBook(book)}} key=\"edit\" />,\r\n          <CloseOutlined onClick={()=>{deleteBook(book.id)}}/>\r\n        ]}\r\n      >\r\n      <Title>{book.title}</Title>\r\n      <Text>{book.author}</Text>\r\n    </Card>\r\n  </div>\r\n  )\r\n\r\n}\r\n\r\nexport default BookItem;","import React from 'react'\r\n\r\nimport BookItem from '../BookItem/BookItem'\r\nimport { Row, Col } from 'antd';\r\n\r\nconst BooksList = ({ books, deleteBook, onEditBook }) => {\r\n  return books.length ? (\r\n    <Row gutter={[16, 16]}>\r\n      {books.map(book => (\r\n        <Col xs={24} sm={12} md={8} lg={8} xl={6} key={book.id}>\r\n          <BookItem book={book} deleteBook={deleteBook}  onEditBook={onEditBook}/>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  ) : (\r\n    <div>Книг нет.</div>\r\n  );\r\n}\r\n\r\nexport default BooksList","export const BOOKS_STORE = 'BOOKS';","import React, {\r\n  useState,\r\n  useEffect\r\n} from 'react'\r\nimport BookCreator from './Components/InputBooks/BookCreator'\r\nimport BooksList from './Components/BooksList/BooksList'\r\nimport {\r\n  BOOKS_STORE\r\n} from './const';\r\nimport { Row, Col, Button } from 'antd';\r\n\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction App() {\r\n  const [books, setBooks] = useState([]); // список книг\r\n  const [isModalVisible, setIsModalVisible] = useState(false); // состояние модального окна (открыто/закрыто)\r\n  const [editableBook, setEditableBook] = useState(); // отредактированная книга\r\n  \r\n  /** Открытие модального окна */\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n   /** Закрытие модального окна */\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setEditableBook();\r\n  };\r\n\r\n  /** Сохранение в LocalStorage */\r\n  const saveBookInLocalStorage = (currentBooks) => {\r\n    localStorage.setItem(BOOKS_STORE, JSON.stringify(currentBooks));\r\n  }\r\n\r\n  /** Созранение в books и LocalStorage */\r\n  const saveBooks = (books) => {\r\n    setBooks(books);\r\n    saveBookInLocalStorage(books);\r\n  }\r\n\r\n  /** Удаление книги по ID и сохранение в books и LocalStorage */\r\n  const deleteBook = (bookID) =>{\r\n    const newBooksList = books.filter((book) => book.id !== bookID)\r\n    setBooks(newBooksList);\r\n    saveBookInLocalStorage(newBooksList);\r\n  }\r\n\r\n  /** Присвоение id книге и сохранение */\r\n  const addBook = (book) => {\r\n    const newBook = {\r\n      id: `${new Date().getTime()}`,\r\n      ...book\r\n    }\r\n    const currentBooks = [...books, newBook];\r\n    saveBooks(currentBooks);\r\n  }\r\n\r\n  /** Обновление книги  */\r\n  const updateBooks = (book) => {\r\n    const updatedBooks = books.map(b => b.id === book.id ? book : b);\r\n    saveBooks(updatedBooks);\r\n  }\r\n\r\n  /** Устаавливает данные book при нажатии на иконку редактирования */\r\n  const onEditBook = (book) => {\r\n    setEditableBook(book);\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  /** Проверяет наличие id при закрытии модального окна (если id есть то обновляет данные, если нет, то создает новую) */\r\n  const modalСhoice = (book) => {\r\n    if (book.id) {\r\n      updateBooks(book);\r\n    } else {\r\n      addBook(book);\r\n    }\r\n    setEditableBook();\r\n    setIsModalVisible(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(BOOKS_STORE);\r\n    if (data) {\r\n      setBooks(JSON.parse(data));\r\n    }\r\n  }, []);\r\n  return ( \r\n    <Row className=\"App\">\r\n      <Col span={12} offset = {6}>\r\n        <Button type=\"primary\" onClick={showModal} className=\"button\">\r\n          Добавить книгу\r\n        </Button>\r\n      </Col>\r\n      <Col span={20} offset = {2}>\r\n        <BooksList books={books} deleteBook={deleteBook} onEditBook={onEditBook}  />\r\n      </Col>\r\n      {isModalVisible && (\r\n        <BookCreator\r\n          isVisible={isModalVisible}\r\n          onCancel={handleCancel}\r\n          modalСhoice={modalСhoice}\r\n          initialFormData={editableBook}\r\n        /> \r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}